---

- name: Create project user
  user: name={{ project_user }}
        group=nginx
        shell=/bin/bash
        password={{ password }}
        append=yes

- name: Set permissions
  become: true
  become_user: "{{ project_user }}"
  file:
    path: /home/{{ project_user }}/
    state: directory
    mode: '710'

- name: Initialize PostgreSQL
  command: service postgresql initdb

- name: Start PostgreSQL
  service:
    name: postgresql
    state: restarted
    enabled: yes

- name: Configure PostgreSQL
  template:
    src: 'pg_hba.conf.j2'
    dest: "/var/lib/pgsql/data/pg_hba.conf"

- name: Restart PostgreSQL
  service:
    name: postgresql
    state: restarted

- name: Make project database
  postgresql_db:
    name: "{{ project_name }}"
  become: true
  become_user: postgres

- name: Configure database
  postgresql_user:
    db: '{{ project_name }}'
    name: '{{ project_user }}'
    password: '{{ password }}'
    priv: "ALL"
    encrypted: yes

- name: Create project folder
  become: true
  become_user: "{{ project_user }}"
  file:
    path: /home/{{ project_user }}/{{ project_name }}
    state: directory
    mode: '710'

- name: Create Django project
  command: /home/{{ project_user }}/venvs/{{ project_name }}env/bin/django-admin.py startproject {{ project_name }} /home/{{ project_user }}/{{ project_name }}
  virtualenv: /home/{{ project_user }}/venvs/{{ project_name }}env
# - name: Create Django project
#   command: django-admin.py startproject {{ project_name }} /home/{{ project_user }}/{{ project_name }}
#   virtualenv: /home/{{ project_user }}/venvs/{{ project_name }}env

- name: Adjust project settings
  template:
    src: 'postgres_settings.py.j2'
    dest: "/home/{{ project_user }}/{{ project_name }}/{{ project_name }}/settings.py"

- name: Complete project setup
  command: "{{ item }}"
  with_items:
    - /home/{{ project_user }}/venvs/myprojectenv/bin/python /home/{{ project_user }}/{{ project_name }}/manage.py makemigrations
    - /home/{{ project_user }}/venvs/myprojectenv/bin/python /home/{{ project_user }}/{{ project_name }}/manage.py migrate


- name: Create superuser
  django_manage:
    command: "createsuperuser --noinput --username={{ project_user }} --email=admin@example.com"
    app_path: "/home/{{ project_user }}/{{ project_name }}/"
    virtualenv: /home/{{ project_user }}/venvs/{{ project_name }}env

- name: Collect static content
  django_manage:
    command: collectstatic
    app_path: "/home/{{ project_user }}/{{ project_name }}/"
    virtualenv: /home/{{ project_user }}/venvs/{{ project_name }}env

- name: Create Gunicorn service
  template:
    src: 'gunicorn.service.j2'
    dest: "/etc/systemd/system/gunicorn.service"

- name: Start Gunicorn
  service:
    name: gunicorn
    state: restarted
    enabled: yes

- name: Configure NGINX
  template:
    src: 'nginx.conf.j2'
    dest: "/etc/nginx/nginx.conf"

- name: Start NGINX
  service:
    name: nginx
    state: restarted
    enabled: yes
